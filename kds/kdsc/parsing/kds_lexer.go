// Code generated from kds.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parsing

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type kdsLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var KdsLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func kdslexerLexerInit() {
	staticData := &KdsLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'import'", "'package'", "'repeated'", "'map'", "'int32'", "'int64'",
		"'uint32'", "'uint64'", "'sint32'", "'sint64'", "'fixed32'", "'fixed64'",
		"'sfixed32'", "'sfixed64'", "'bool'", "'string'", "'double'", "'float'",
		"'bytes'", "'enum'", "'entity'", "'component'", "';'", "'='", "'('",
		"')'", "'['", "']'", "'{'", "'}'", "'<'", "'>'", "'.'", "','", "':'",
		"'+'", "'-'",
	}
	staticData.SymbolicNames = []string{
		"", "IMPORT", "PACKAGE", "REPEATED", "MAP", "INT32", "INT64", "UINT32",
		"UINT64", "SINT32", "SINT64", "FIXED32", "FIXED64", "SFIXED32", "SFIXED64",
		"BOOL", "STRING", "DOUBLE", "FLOAT", "BYTES", "ENUM", "ENTITY", "COMPONENT",
		"SEMI", "EQ", "LP", "RP", "LB", "RB", "LC", "RC", "LT", "GT", "DOT",
		"COMMA", "COLON", "PLUS", "MINUS", "STR_LIT", "BOOL_LIT", "INT_LIT",
		"IDENTIFIER", "WS", "LINE_COMMENT", "COMMENT",
	}
	staticData.RuleNames = []string{
		"IMPORT", "PACKAGE", "REPEATED", "MAP", "INT32", "INT64", "UINT32",
		"UINT64", "SINT32", "SINT64", "FIXED32", "FIXED64", "SFIXED32", "SFIXED64",
		"BOOL", "STRING", "DOUBLE", "FLOAT", "BYTES", "ENUM", "ENTITY", "COMPONENT",
		"SEMI", "EQ", "LP", "RP", "LB", "RB", "LC", "RC", "LT", "GT", "DOT",
		"COMMA", "COLON", "PLUS", "MINUS", "STR_LIT", "CHAR_VALUE", "HEX_ESCAPE",
		"OCT_ESCAPE", "CHAR_ESCAPE", "BOOL_LIT", "INT_LIT", "DECIMAL_LIT", "OCTAL_LIT",
		"HEX_LIT", "IDENTIFIER", "LETTER", "DECIMAL_DIGIT", "OCTAL_DIGIT", "HEX_DIGIT",
		"WS", "LINE_COMMENT", "COMMENT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 44, 418, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
		0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
		2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1,
		4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1,
		6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1,
		7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1,
		12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1,
		15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24,
		1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1,
		29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34,
		1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 5, 37, 299, 8, 37, 10, 37, 12,
		37, 302, 9, 37, 1, 37, 1, 37, 1, 37, 5, 37, 307, 8, 37, 10, 37, 12, 37,
		310, 9, 37, 1, 37, 3, 37, 313, 8, 37, 1, 38, 1, 38, 1, 38, 1, 38, 3, 38,
		319, 8, 38, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1,
		40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42,
		1, 42, 1, 42, 1, 42, 3, 42, 343, 8, 42, 1, 43, 1, 43, 1, 43, 3, 43, 348,
		8, 43, 1, 44, 1, 44, 5, 44, 352, 8, 44, 10, 44, 12, 44, 355, 9, 44, 1,
		45, 1, 45, 5, 45, 359, 8, 45, 10, 45, 12, 45, 362, 9, 45, 1, 46, 1, 46,
		1, 46, 4, 46, 367, 8, 46, 11, 46, 12, 46, 368, 1, 47, 1, 47, 1, 47, 5,
		47, 374, 8, 47, 10, 47, 12, 47, 377, 9, 47, 1, 48, 1, 48, 1, 49, 1, 49,
		1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 4, 52, 388, 8, 52, 11, 52, 12, 52, 389,
		1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 5, 53, 398, 8, 53, 10, 53, 12,
		53, 401, 9, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 54, 5, 54, 409, 8,
		54, 10, 54, 12, 54, 412, 9, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 3, 300,
		308, 410, 0, 55, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17,
		9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35,
		18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53,
		27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71,
		36, 73, 37, 75, 38, 77, 0, 79, 0, 81, 0, 83, 0, 85, 39, 87, 40, 89, 0,
		91, 0, 93, 0, 95, 41, 97, 0, 99, 0, 101, 0, 103, 0, 105, 42, 107, 43, 109,
		44, 1, 0, 10, 3, 0, 0, 0, 10, 10, 92, 92, 2, 0, 88, 88, 120, 120, 9, 0,
		34, 34, 39, 39, 92, 92, 97, 98, 102, 102, 110, 110, 114, 114, 116, 116,
		118, 118, 1, 0, 49, 57, 3, 0, 65, 90, 95, 95, 97, 122, 1, 0, 48, 57, 1,
		0, 48, 55, 3, 0, 48, 57, 65, 70, 97, 102, 3, 0, 9, 10, 12, 13, 32, 32,
		2, 0, 10, 10, 13, 13, 423, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1,
		0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13,
		1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0,
		21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0,
		0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0,
		0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0,
		0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1,
		0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59,
		1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0,
		67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0,
		0, 75, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 95, 1, 0, 0,
		0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 1, 111,
		1, 0, 0, 0, 3, 118, 1, 0, 0, 0, 5, 126, 1, 0, 0, 0, 7, 135, 1, 0, 0, 0,
		9, 139, 1, 0, 0, 0, 11, 145, 1, 0, 0, 0, 13, 151, 1, 0, 0, 0, 15, 158,
		1, 0, 0, 0, 17, 165, 1, 0, 0, 0, 19, 172, 1, 0, 0, 0, 21, 179, 1, 0, 0,
		0, 23, 187, 1, 0, 0, 0, 25, 195, 1, 0, 0, 0, 27, 204, 1, 0, 0, 0, 29, 213,
		1, 0, 0, 0, 31, 218, 1, 0, 0, 0, 33, 225, 1, 0, 0, 0, 35, 232, 1, 0, 0,
		0, 37, 238, 1, 0, 0, 0, 39, 244, 1, 0, 0, 0, 41, 249, 1, 0, 0, 0, 43, 256,
		1, 0, 0, 0, 45, 266, 1, 0, 0, 0, 47, 268, 1, 0, 0, 0, 49, 270, 1, 0, 0,
		0, 51, 272, 1, 0, 0, 0, 53, 274, 1, 0, 0, 0, 55, 276, 1, 0, 0, 0, 57, 278,
		1, 0, 0, 0, 59, 280, 1, 0, 0, 0, 61, 282, 1, 0, 0, 0, 63, 284, 1, 0, 0,
		0, 65, 286, 1, 0, 0, 0, 67, 288, 1, 0, 0, 0, 69, 290, 1, 0, 0, 0, 71, 292,
		1, 0, 0, 0, 73, 294, 1, 0, 0, 0, 75, 312, 1, 0, 0, 0, 77, 318, 1, 0, 0,
		0, 79, 320, 1, 0, 0, 0, 81, 325, 1, 0, 0, 0, 83, 330, 1, 0, 0, 0, 85, 342,
		1, 0, 0, 0, 87, 347, 1, 0, 0, 0, 89, 349, 1, 0, 0, 0, 91, 356, 1, 0, 0,
		0, 93, 363, 1, 0, 0, 0, 95, 370, 1, 0, 0, 0, 97, 378, 1, 0, 0, 0, 99, 380,
		1, 0, 0, 0, 101, 382, 1, 0, 0, 0, 103, 384, 1, 0, 0, 0, 105, 387, 1, 0,
		0, 0, 107, 393, 1, 0, 0, 0, 109, 404, 1, 0, 0, 0, 111, 112, 5, 105, 0,
		0, 112, 113, 5, 109, 0, 0, 113, 114, 5, 112, 0, 0, 114, 115, 5, 111, 0,
		0, 115, 116, 5, 114, 0, 0, 116, 117, 5, 116, 0, 0, 117, 2, 1, 0, 0, 0,
		118, 119, 5, 112, 0, 0, 119, 120, 5, 97, 0, 0, 120, 121, 5, 99, 0, 0, 121,
		122, 5, 107, 0, 0, 122, 123, 5, 97, 0, 0, 123, 124, 5, 103, 0, 0, 124,
		125, 5, 101, 0, 0, 125, 4, 1, 0, 0, 0, 126, 127, 5, 114, 0, 0, 127, 128,
		5, 101, 0, 0, 128, 129, 5, 112, 0, 0, 129, 130, 5, 101, 0, 0, 130, 131,
		5, 97, 0, 0, 131, 132, 5, 116, 0, 0, 132, 133, 5, 101, 0, 0, 133, 134,
		5, 100, 0, 0, 134, 6, 1, 0, 0, 0, 135, 136, 5, 109, 0, 0, 136, 137, 5,
		97, 0, 0, 137, 138, 5, 112, 0, 0, 138, 8, 1, 0, 0, 0, 139, 140, 5, 105,
		0, 0, 140, 141, 5, 110, 0, 0, 141, 142, 5, 116, 0, 0, 142, 143, 5, 51,
		0, 0, 143, 144, 5, 50, 0, 0, 144, 10, 1, 0, 0, 0, 145, 146, 5, 105, 0,
		0, 146, 147, 5, 110, 0, 0, 147, 148, 5, 116, 0, 0, 148, 149, 5, 54, 0,
		0, 149, 150, 5, 52, 0, 0, 150, 12, 1, 0, 0, 0, 151, 152, 5, 117, 0, 0,
		152, 153, 5, 105, 0, 0, 153, 154, 5, 110, 0, 0, 154, 155, 5, 116, 0, 0,
		155, 156, 5, 51, 0, 0, 156, 157, 5, 50, 0, 0, 157, 14, 1, 0, 0, 0, 158,
		159, 5, 117, 0, 0, 159, 160, 5, 105, 0, 0, 160, 161, 5, 110, 0, 0, 161,
		162, 5, 116, 0, 0, 162, 163, 5, 54, 0, 0, 163, 164, 5, 52, 0, 0, 164, 16,
		1, 0, 0, 0, 165, 166, 5, 115, 0, 0, 166, 167, 5, 105, 0, 0, 167, 168, 5,
		110, 0, 0, 168, 169, 5, 116, 0, 0, 169, 170, 5, 51, 0, 0, 170, 171, 5,
		50, 0, 0, 171, 18, 1, 0, 0, 0, 172, 173, 5, 115, 0, 0, 173, 174, 5, 105,
		0, 0, 174, 175, 5, 110, 0, 0, 175, 176, 5, 116, 0, 0, 176, 177, 5, 54,
		0, 0, 177, 178, 5, 52, 0, 0, 178, 20, 1, 0, 0, 0, 179, 180, 5, 102, 0,
		0, 180, 181, 5, 105, 0, 0, 181, 182, 5, 120, 0, 0, 182, 183, 5, 101, 0,
		0, 183, 184, 5, 100, 0, 0, 184, 185, 5, 51, 0, 0, 185, 186, 5, 50, 0, 0,
		186, 22, 1, 0, 0, 0, 187, 188, 5, 102, 0, 0, 188, 189, 5, 105, 0, 0, 189,
		190, 5, 120, 0, 0, 190, 191, 5, 101, 0, 0, 191, 192, 5, 100, 0, 0, 192,
		193, 5, 54, 0, 0, 193, 194, 5, 52, 0, 0, 194, 24, 1, 0, 0, 0, 195, 196,
		5, 115, 0, 0, 196, 197, 5, 102, 0, 0, 197, 198, 5, 105, 0, 0, 198, 199,
		5, 120, 0, 0, 199, 200, 5, 101, 0, 0, 200, 201, 5, 100, 0, 0, 201, 202,
		5, 51, 0, 0, 202, 203, 5, 50, 0, 0, 203, 26, 1, 0, 0, 0, 204, 205, 5, 115,
		0, 0, 205, 206, 5, 102, 0, 0, 206, 207, 5, 105, 0, 0, 207, 208, 5, 120,
		0, 0, 208, 209, 5, 101, 0, 0, 209, 210, 5, 100, 0, 0, 210, 211, 5, 54,
		0, 0, 211, 212, 5, 52, 0, 0, 212, 28, 1, 0, 0, 0, 213, 214, 5, 98, 0, 0,
		214, 215, 5, 111, 0, 0, 215, 216, 5, 111, 0, 0, 216, 217, 5, 108, 0, 0,
		217, 30, 1, 0, 0, 0, 218, 219, 5, 115, 0, 0, 219, 220, 5, 116, 0, 0, 220,
		221, 5, 114, 0, 0, 221, 222, 5, 105, 0, 0, 222, 223, 5, 110, 0, 0, 223,
		224, 5, 103, 0, 0, 224, 32, 1, 0, 0, 0, 225, 226, 5, 100, 0, 0, 226, 227,
		5, 111, 0, 0, 227, 228, 5, 117, 0, 0, 228, 229, 5, 98, 0, 0, 229, 230,
		5, 108, 0, 0, 230, 231, 5, 101, 0, 0, 231, 34, 1, 0, 0, 0, 232, 233, 5,
		102, 0, 0, 233, 234, 5, 108, 0, 0, 234, 235, 5, 111, 0, 0, 235, 236, 5,
		97, 0, 0, 236, 237, 5, 116, 0, 0, 237, 36, 1, 0, 0, 0, 238, 239, 5, 98,
		0, 0, 239, 240, 5, 121, 0, 0, 240, 241, 5, 116, 0, 0, 241, 242, 5, 101,
		0, 0, 242, 243, 5, 115, 0, 0, 243, 38, 1, 0, 0, 0, 244, 245, 5, 101, 0,
		0, 245, 246, 5, 110, 0, 0, 246, 247, 5, 117, 0, 0, 247, 248, 5, 109, 0,
		0, 248, 40, 1, 0, 0, 0, 249, 250, 5, 101, 0, 0, 250, 251, 5, 110, 0, 0,
		251, 252, 5, 116, 0, 0, 252, 253, 5, 105, 0, 0, 253, 254, 5, 116, 0, 0,
		254, 255, 5, 121, 0, 0, 255, 42, 1, 0, 0, 0, 256, 257, 5, 99, 0, 0, 257,
		258, 5, 111, 0, 0, 258, 259, 5, 109, 0, 0, 259, 260, 5, 112, 0, 0, 260,
		261, 5, 111, 0, 0, 261, 262, 5, 110, 0, 0, 262, 263, 5, 101, 0, 0, 263,
		264, 5, 110, 0, 0, 264, 265, 5, 116, 0, 0, 265, 44, 1, 0, 0, 0, 266, 267,
		5, 59, 0, 0, 267, 46, 1, 0, 0, 0, 268, 269, 5, 61, 0, 0, 269, 48, 1, 0,
		0, 0, 270, 271, 5, 40, 0, 0, 271, 50, 1, 0, 0, 0, 272, 273, 5, 41, 0, 0,
		273, 52, 1, 0, 0, 0, 274, 275, 5, 91, 0, 0, 275, 54, 1, 0, 0, 0, 276, 277,
		5, 93, 0, 0, 277, 56, 1, 0, 0, 0, 278, 279, 5, 123, 0, 0, 279, 58, 1, 0,
		0, 0, 280, 281, 5, 125, 0, 0, 281, 60, 1, 0, 0, 0, 282, 283, 5, 60, 0,
		0, 283, 62, 1, 0, 0, 0, 284, 285, 5, 62, 0, 0, 285, 64, 1, 0, 0, 0, 286,
		287, 5, 46, 0, 0, 287, 66, 1, 0, 0, 0, 288, 289, 5, 44, 0, 0, 289, 68,
		1, 0, 0, 0, 290, 291, 5, 58, 0, 0, 291, 70, 1, 0, 0, 0, 292, 293, 5, 43,
		0, 0, 293, 72, 1, 0, 0, 0, 294, 295, 5, 45, 0, 0, 295, 74, 1, 0, 0, 0,
		296, 300, 5, 39, 0, 0, 297, 299, 3, 77, 38, 0, 298, 297, 1, 0, 0, 0, 299,
		302, 1, 0, 0, 0, 300, 301, 1, 0, 0, 0, 300, 298, 1, 0, 0, 0, 301, 303,
		1, 0, 0, 0, 302, 300, 1, 0, 0, 0, 303, 313, 5, 39, 0, 0, 304, 308, 5, 34,
		0, 0, 305, 307, 3, 77, 38, 0, 306, 305, 1, 0, 0, 0, 307, 310, 1, 0, 0,
		0, 308, 309, 1, 0, 0, 0, 308, 306, 1, 0, 0, 0, 309, 311, 1, 0, 0, 0, 310,
		308, 1, 0, 0, 0, 311, 313, 5, 34, 0, 0, 312, 296, 1, 0, 0, 0, 312, 304,
		1, 0, 0, 0, 313, 76, 1, 0, 0, 0, 314, 319, 3, 79, 39, 0, 315, 319, 3, 81,
		40, 0, 316, 319, 3, 83, 41, 0, 317, 319, 8, 0, 0, 0, 318, 314, 1, 0, 0,
		0, 318, 315, 1, 0, 0, 0, 318, 316, 1, 0, 0, 0, 318, 317, 1, 0, 0, 0, 319,
		78, 1, 0, 0, 0, 320, 321, 5, 92, 0, 0, 321, 322, 7, 1, 0, 0, 322, 323,
		3, 103, 51, 0, 323, 324, 3, 103, 51, 0, 324, 80, 1, 0, 0, 0, 325, 326,
		5, 92, 0, 0, 326, 327, 3, 101, 50, 0, 327, 328, 3, 101, 50, 0, 328, 329,
		3, 101, 50, 0, 329, 82, 1, 0, 0, 0, 330, 331, 5, 92, 0, 0, 331, 332, 7,
		2, 0, 0, 332, 84, 1, 0, 0, 0, 333, 334, 5, 116, 0, 0, 334, 335, 5, 114,
		0, 0, 335, 336, 5, 117, 0, 0, 336, 343, 5, 101, 0, 0, 337, 338, 5, 102,
		0, 0, 338, 339, 5, 97, 0, 0, 339, 340, 5, 108, 0, 0, 340, 341, 5, 115,
		0, 0, 341, 343, 5, 101, 0, 0, 342, 333, 1, 0, 0, 0, 342, 337, 1, 0, 0,
		0, 343, 86, 1, 0, 0, 0, 344, 348, 3, 89, 44, 0, 345, 348, 3, 91, 45, 0,
		346, 348, 3, 93, 46, 0, 347, 344, 1, 0, 0, 0, 347, 345, 1, 0, 0, 0, 347,
		346, 1, 0, 0, 0, 348, 88, 1, 0, 0, 0, 349, 353, 7, 3, 0, 0, 350, 352, 3,
		99, 49, 0, 351, 350, 1, 0, 0, 0, 352, 355, 1, 0, 0, 0, 353, 351, 1, 0,
		0, 0, 353, 354, 1, 0, 0, 0, 354, 90, 1, 0, 0, 0, 355, 353, 1, 0, 0, 0,
		356, 360, 5, 48, 0, 0, 357, 359, 3, 101, 50, 0, 358, 357, 1, 0, 0, 0, 359,
		362, 1, 0, 0, 0, 360, 358, 1, 0, 0, 0, 360, 361, 1, 0, 0, 0, 361, 92, 1,
		0, 0, 0, 362, 360, 1, 0, 0, 0, 363, 364, 5, 48, 0, 0, 364, 366, 7, 1, 0,
		0, 365, 367, 3, 103, 51, 0, 366, 365, 1, 0, 0, 0, 367, 368, 1, 0, 0, 0,
		368, 366, 1, 0, 0, 0, 368, 369, 1, 0, 0, 0, 369, 94, 1, 0, 0, 0, 370, 375,
		3, 97, 48, 0, 371, 374, 3, 97, 48, 0, 372, 374, 3, 99, 49, 0, 373, 371,
		1, 0, 0, 0, 373, 372, 1, 0, 0, 0, 374, 377, 1, 0, 0, 0, 375, 373, 1, 0,
		0, 0, 375, 376, 1, 0, 0, 0, 376, 96, 1, 0, 0, 0, 377, 375, 1, 0, 0, 0,
		378, 379, 7, 4, 0, 0, 379, 98, 1, 0, 0, 0, 380, 381, 7, 5, 0, 0, 381, 100,
		1, 0, 0, 0, 382, 383, 7, 6, 0, 0, 383, 102, 1, 0, 0, 0, 384, 385, 7, 7,
		0, 0, 385, 104, 1, 0, 0, 0, 386, 388, 7, 8, 0, 0, 387, 386, 1, 0, 0, 0,
		388, 389, 1, 0, 0, 0, 389, 387, 1, 0, 0, 0, 389, 390, 1, 0, 0, 0, 390,
		391, 1, 0, 0, 0, 391, 392, 6, 52, 0, 0, 392, 106, 1, 0, 0, 0, 393, 394,
		5, 47, 0, 0, 394, 395, 5, 47, 0, 0, 395, 399, 1, 0, 0, 0, 396, 398, 8,
		9, 0, 0, 397, 396, 1, 0, 0, 0, 398, 401, 1, 0, 0, 0, 399, 397, 1, 0, 0,
		0, 399, 400, 1, 0, 0, 0, 400, 402, 1, 0, 0, 0, 401, 399, 1, 0, 0, 0, 402,
		403, 6, 53, 1, 0, 403, 108, 1, 0, 0, 0, 404, 405, 5, 47, 0, 0, 405, 406,
		5, 42, 0, 0, 406, 410, 1, 0, 0, 0, 407, 409, 9, 0, 0, 0, 408, 407, 1, 0,
		0, 0, 409, 412, 1, 0, 0, 0, 410, 411, 1, 0, 0, 0, 410, 408, 1, 0, 0, 0,
		411, 413, 1, 0, 0, 0, 412, 410, 1, 0, 0, 0, 413, 414, 5, 42, 0, 0, 414,
		415, 5, 47, 0, 0, 415, 416, 1, 0, 0, 0, 416, 417, 6, 54, 1, 0, 417, 110,
		1, 0, 0, 0, 15, 0, 300, 308, 312, 318, 342, 347, 353, 360, 368, 373, 375,
		389, 399, 410, 2, 6, 0, 0, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// kdsLexerInit initializes any static state used to implement kdsLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewkdsLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func KdsLexerInit() {
	staticData := &KdsLexerLexerStaticData
	staticData.once.Do(kdslexerLexerInit)
}

// NewkdsLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewkdsLexer(input antlr.CharStream) *kdsLexer {
	KdsLexerInit()
	l := new(kdsLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &KdsLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "kds.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// kdsLexer tokens.
const (
	kdsLexerIMPORT       = 1
	kdsLexerPACKAGE      = 2
	kdsLexerREPEATED     = 3
	kdsLexerMAP          = 4
	kdsLexerINT32        = 5
	kdsLexerINT64        = 6
	kdsLexerUINT32       = 7
	kdsLexerUINT64       = 8
	kdsLexerSINT32       = 9
	kdsLexerSINT64       = 10
	kdsLexerFIXED32      = 11
	kdsLexerFIXED64      = 12
	kdsLexerSFIXED32     = 13
	kdsLexerSFIXED64     = 14
	kdsLexerBOOL         = 15
	kdsLexerSTRING       = 16
	kdsLexerDOUBLE       = 17
	kdsLexerFLOAT        = 18
	kdsLexerBYTES        = 19
	kdsLexerENUM         = 20
	kdsLexerENTITY       = 21
	kdsLexerCOMPONENT    = 22
	kdsLexerSEMI         = 23
	kdsLexerEQ           = 24
	kdsLexerLP           = 25
	kdsLexerRP           = 26
	kdsLexerLB           = 27
	kdsLexerRB           = 28
	kdsLexerLC           = 29
	kdsLexerRC           = 30
	kdsLexerLT           = 31
	kdsLexerGT           = 32
	kdsLexerDOT          = 33
	kdsLexerCOMMA        = 34
	kdsLexerCOLON        = 35
	kdsLexerPLUS         = 36
	kdsLexerMINUS        = 37
	kdsLexerSTR_LIT      = 38
	kdsLexerBOOL_LIT     = 39
	kdsLexerINT_LIT      = 40
	kdsLexerIDENTIFIER   = 41
	kdsLexerWS           = 42
	kdsLexerLINE_COMMENT = 43
	kdsLexerCOMMENT      = 44
)
