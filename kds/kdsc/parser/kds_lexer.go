// Code generated from kds.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type kdsLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var KdsLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func kdslexerLexerInit() {
	staticData := &KdsLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'import'", "'weak'", "'public'", "'package'", "'option'", "'repeated'",
		"'map'", "'int32'", "'int64'", "'uint32'", "'uint64'", "'sint32'", "'sint64'",
		"'fixed32'", "'fixed64'", "'sfixed32'", "'sfixed64'", "'bool'", "'string'",
		"'double'", "'float'", "'bytes'", "'enum'", "'entity'", "'component'",
		"'\"proto3\"'", "''proto3''", "';'", "'='", "'('", "')'", "'['", "']'",
		"'{'", "'}'", "'<'", "'>'", "'.'", "','", "':'", "'+'", "'-'",
	}
	staticData.SymbolicNames = []string{
		"", "IMPORT", "WEAK", "PUBLIC", "PACKAGE", "OPTION", "REPEATED", "MAP",
		"INT32", "INT64", "UINT32", "UINT64", "SINT32", "SINT64", "FIXED32",
		"FIXED64", "SFIXED32", "SFIXED64", "BOOL", "STRING", "DOUBLE", "FLOAT",
		"BYTES", "ENUM", "ENTITY", "COMPONENT", "PROTO3_LIT_SINGLE", "PROTO3_LIT_DOBULE",
		"SEMI", "EQ", "LP", "RP", "LB", "RB", "LC", "RC", "LT", "GT", "DOT",
		"COMMA", "COLON", "PLUS", "MINUS", "STR_LIT", "BOOL_LIT", "FLOAT_LIT",
		"INT_LIT", "IDENTIFIER", "WS", "LINE_COMMENT", "COMMENT",
	}
	staticData.RuleNames = []string{
		"IMPORT", "WEAK", "PUBLIC", "PACKAGE", "OPTION", "REPEATED", "MAP",
		"INT32", "INT64", "UINT32", "UINT64", "SINT32", "SINT64", "FIXED32",
		"FIXED64", "SFIXED32", "SFIXED64", "BOOL", "STRING", "DOUBLE", "FLOAT",
		"BYTES", "ENUM", "ENTITY", "COMPONENT", "PROTO3_LIT_SINGLE", "PROTO3_LIT_DOBULE",
		"SEMI", "EQ", "LP", "RP", "LB", "RB", "LC", "RC", "LT", "GT", "DOT",
		"COMMA", "COLON", "PLUS", "MINUS", "STR_LIT", "CHAR_VALUE", "HEX_ESCAPE",
		"OCT_ESCAPE", "CHAR_ESCAPE", "BOOL_LIT", "FLOAT_LIT", "EXPONENT", "DECIMALS",
		"INT_LIT", "DECIMAL_LIT", "OCTAL_LIT", "HEX_LIT", "IDENTIFIER", "LETTER",
		"DECIMAL_DIGIT", "OCTAL_DIGIT", "HEX_DIGIT", "WS", "LINE_COMMENT", "COMMENT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 50, 509, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1,
		3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1,
		5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1,
		7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1,
		9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1,
		12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1,
		14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1,
		17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19,
		1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1,
		20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22,
		1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1,
		24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25,
		1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1,
		26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29,
		1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1,
		34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39,
		1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 5, 42, 352, 8, 42, 10, 42, 12,
		42, 355, 9, 42, 1, 42, 1, 42, 1, 42, 5, 42, 360, 8, 42, 10, 42, 12, 42,
		363, 9, 42, 1, 42, 3, 42, 366, 8, 42, 1, 43, 1, 43, 1, 43, 1, 43, 3, 43,
		372, 8, 43, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1,
		45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47,
		1, 47, 1, 47, 1, 47, 3, 47, 396, 8, 47, 1, 48, 1, 48, 1, 48, 3, 48, 401,
		8, 48, 1, 48, 3, 48, 404, 8, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1,
		48, 3, 48, 412, 8, 48, 3, 48, 414, 8, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1,
		48, 1, 48, 3, 48, 422, 8, 48, 1, 49, 1, 49, 1, 49, 3, 49, 427, 8, 49, 1,
		49, 1, 49, 1, 50, 4, 50, 432, 8, 50, 11, 50, 12, 50, 433, 1, 51, 1, 51,
		1, 51, 3, 51, 439, 8, 51, 1, 52, 1, 52, 5, 52, 443, 8, 52, 10, 52, 12,
		52, 446, 9, 52, 1, 53, 1, 53, 5, 53, 450, 8, 53, 10, 53, 12, 53, 453, 9,
		53, 1, 54, 1, 54, 1, 54, 4, 54, 458, 8, 54, 11, 54, 12, 54, 459, 1, 55,
		1, 55, 1, 55, 5, 55, 465, 8, 55, 10, 55, 12, 55, 468, 9, 55, 1, 56, 1,
		56, 1, 57, 1, 57, 1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 4, 60, 479, 8, 60,
		11, 60, 12, 60, 480, 1, 60, 1, 60, 1, 61, 1, 61, 1, 61, 1, 61, 5, 61, 489,
		8, 61, 10, 61, 12, 61, 492, 9, 61, 1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 1,
		62, 5, 62, 500, 8, 62, 10, 62, 12, 62, 503, 9, 62, 1, 62, 1, 62, 1, 62,
		1, 62, 1, 62, 3, 353, 361, 501, 0, 63, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11,
		6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15,
		31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24,
		49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33,
		67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42,
		85, 43, 87, 0, 89, 0, 91, 0, 93, 0, 95, 44, 97, 45, 99, 0, 101, 0, 103,
		46, 105, 0, 107, 0, 109, 0, 111, 47, 113, 0, 115, 0, 117, 0, 119, 0, 121,
		48, 123, 49, 125, 50, 1, 0, 11, 3, 0, 0, 0, 10, 10, 92, 92, 2, 0, 88, 88,
		120, 120, 9, 0, 34, 34, 39, 39, 92, 92, 97, 98, 102, 102, 110, 110, 114,
		114, 116, 116, 118, 118, 2, 0, 69, 69, 101, 101, 1, 0, 49, 57, 3, 0, 65,
		90, 95, 95, 97, 122, 1, 0, 48, 57, 1, 0, 48, 55, 3, 0, 48, 57, 65, 70,
		97, 102, 3, 0, 9, 10, 12, 13, 32, 32, 2, 0, 10, 10, 13, 13, 522, 0, 1,
		1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9,
		1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0,
		17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0,
		0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0,
		0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0,
		0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1,
		0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55,
		1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0,
		63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0,
		0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0,
		0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0,
		0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 111,
		1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0,
		1, 127, 1, 0, 0, 0, 3, 134, 1, 0, 0, 0, 5, 139, 1, 0, 0, 0, 7, 146, 1,
		0, 0, 0, 9, 154, 1, 0, 0, 0, 11, 161, 1, 0, 0, 0, 13, 170, 1, 0, 0, 0,
		15, 174, 1, 0, 0, 0, 17, 180, 1, 0, 0, 0, 19, 186, 1, 0, 0, 0, 21, 193,
		1, 0, 0, 0, 23, 200, 1, 0, 0, 0, 25, 207, 1, 0, 0, 0, 27, 214, 1, 0, 0,
		0, 29, 222, 1, 0, 0, 0, 31, 230, 1, 0, 0, 0, 33, 239, 1, 0, 0, 0, 35, 248,
		1, 0, 0, 0, 37, 253, 1, 0, 0, 0, 39, 260, 1, 0, 0, 0, 41, 267, 1, 0, 0,
		0, 43, 273, 1, 0, 0, 0, 45, 279, 1, 0, 0, 0, 47, 284, 1, 0, 0, 0, 49, 291,
		1, 0, 0, 0, 51, 301, 1, 0, 0, 0, 53, 310, 1, 0, 0, 0, 55, 319, 1, 0, 0,
		0, 57, 321, 1, 0, 0, 0, 59, 323, 1, 0, 0, 0, 61, 325, 1, 0, 0, 0, 63, 327,
		1, 0, 0, 0, 65, 329, 1, 0, 0, 0, 67, 331, 1, 0, 0, 0, 69, 333, 1, 0, 0,
		0, 71, 335, 1, 0, 0, 0, 73, 337, 1, 0, 0, 0, 75, 339, 1, 0, 0, 0, 77, 341,
		1, 0, 0, 0, 79, 343, 1, 0, 0, 0, 81, 345, 1, 0, 0, 0, 83, 347, 1, 0, 0,
		0, 85, 365, 1, 0, 0, 0, 87, 371, 1, 0, 0, 0, 89, 373, 1, 0, 0, 0, 91, 378,
		1, 0, 0, 0, 93, 383, 1, 0, 0, 0, 95, 395, 1, 0, 0, 0, 97, 421, 1, 0, 0,
		0, 99, 423, 1, 0, 0, 0, 101, 431, 1, 0, 0, 0, 103, 438, 1, 0, 0, 0, 105,
		440, 1, 0, 0, 0, 107, 447, 1, 0, 0, 0, 109, 454, 1, 0, 0, 0, 111, 461,
		1, 0, 0, 0, 113, 469, 1, 0, 0, 0, 115, 471, 1, 0, 0, 0, 117, 473, 1, 0,
		0, 0, 119, 475, 1, 0, 0, 0, 121, 478, 1, 0, 0, 0, 123, 484, 1, 0, 0, 0,
		125, 495, 1, 0, 0, 0, 127, 128, 5, 105, 0, 0, 128, 129, 5, 109, 0, 0, 129,
		130, 5, 112, 0, 0, 130, 131, 5, 111, 0, 0, 131, 132, 5, 114, 0, 0, 132,
		133, 5, 116, 0, 0, 133, 2, 1, 0, 0, 0, 134, 135, 5, 119, 0, 0, 135, 136,
		5, 101, 0, 0, 136, 137, 5, 97, 0, 0, 137, 138, 5, 107, 0, 0, 138, 4, 1,
		0, 0, 0, 139, 140, 5, 112, 0, 0, 140, 141, 5, 117, 0, 0, 141, 142, 5, 98,
		0, 0, 142, 143, 5, 108, 0, 0, 143, 144, 5, 105, 0, 0, 144, 145, 5, 99,
		0, 0, 145, 6, 1, 0, 0, 0, 146, 147, 5, 112, 0, 0, 147, 148, 5, 97, 0, 0,
		148, 149, 5, 99, 0, 0, 149, 150, 5, 107, 0, 0, 150, 151, 5, 97, 0, 0, 151,
		152, 5, 103, 0, 0, 152, 153, 5, 101, 0, 0, 153, 8, 1, 0, 0, 0, 154, 155,
		5, 111, 0, 0, 155, 156, 5, 112, 0, 0, 156, 157, 5, 116, 0, 0, 157, 158,
		5, 105, 0, 0, 158, 159, 5, 111, 0, 0, 159, 160, 5, 110, 0, 0, 160, 10,
		1, 0, 0, 0, 161, 162, 5, 114, 0, 0, 162, 163, 5, 101, 0, 0, 163, 164, 5,
		112, 0, 0, 164, 165, 5, 101, 0, 0, 165, 166, 5, 97, 0, 0, 166, 167, 5,
		116, 0, 0, 167, 168, 5, 101, 0, 0, 168, 169, 5, 100, 0, 0, 169, 12, 1,
		0, 0, 0, 170, 171, 5, 109, 0, 0, 171, 172, 5, 97, 0, 0, 172, 173, 5, 112,
		0, 0, 173, 14, 1, 0, 0, 0, 174, 175, 5, 105, 0, 0, 175, 176, 5, 110, 0,
		0, 176, 177, 5, 116, 0, 0, 177, 178, 5, 51, 0, 0, 178, 179, 5, 50, 0, 0,
		179, 16, 1, 0, 0, 0, 180, 181, 5, 105, 0, 0, 181, 182, 5, 110, 0, 0, 182,
		183, 5, 116, 0, 0, 183, 184, 5, 54, 0, 0, 184, 185, 5, 52, 0, 0, 185, 18,
		1, 0, 0, 0, 186, 187, 5, 117, 0, 0, 187, 188, 5, 105, 0, 0, 188, 189, 5,
		110, 0, 0, 189, 190, 5, 116, 0, 0, 190, 191, 5, 51, 0, 0, 191, 192, 5,
		50, 0, 0, 192, 20, 1, 0, 0, 0, 193, 194, 5, 117, 0, 0, 194, 195, 5, 105,
		0, 0, 195, 196, 5, 110, 0, 0, 196, 197, 5, 116, 0, 0, 197, 198, 5, 54,
		0, 0, 198, 199, 5, 52, 0, 0, 199, 22, 1, 0, 0, 0, 200, 201, 5, 115, 0,
		0, 201, 202, 5, 105, 0, 0, 202, 203, 5, 110, 0, 0, 203, 204, 5, 116, 0,
		0, 204, 205, 5, 51, 0, 0, 205, 206, 5, 50, 0, 0, 206, 24, 1, 0, 0, 0, 207,
		208, 5, 115, 0, 0, 208, 209, 5, 105, 0, 0, 209, 210, 5, 110, 0, 0, 210,
		211, 5, 116, 0, 0, 211, 212, 5, 54, 0, 0, 212, 213, 5, 52, 0, 0, 213, 26,
		1, 0, 0, 0, 214, 215, 5, 102, 0, 0, 215, 216, 5, 105, 0, 0, 216, 217, 5,
		120, 0, 0, 217, 218, 5, 101, 0, 0, 218, 219, 5, 100, 0, 0, 219, 220, 5,
		51, 0, 0, 220, 221, 5, 50, 0, 0, 221, 28, 1, 0, 0, 0, 222, 223, 5, 102,
		0, 0, 223, 224, 5, 105, 0, 0, 224, 225, 5, 120, 0, 0, 225, 226, 5, 101,
		0, 0, 226, 227, 5, 100, 0, 0, 227, 228, 5, 54, 0, 0, 228, 229, 5, 52, 0,
		0, 229, 30, 1, 0, 0, 0, 230, 231, 5, 115, 0, 0, 231, 232, 5, 102, 0, 0,
		232, 233, 5, 105, 0, 0, 233, 234, 5, 120, 0, 0, 234, 235, 5, 101, 0, 0,
		235, 236, 5, 100, 0, 0, 236, 237, 5, 51, 0, 0, 237, 238, 5, 50, 0, 0, 238,
		32, 1, 0, 0, 0, 239, 240, 5, 115, 0, 0, 240, 241, 5, 102, 0, 0, 241, 242,
		5, 105, 0, 0, 242, 243, 5, 120, 0, 0, 243, 244, 5, 101, 0, 0, 244, 245,
		5, 100, 0, 0, 245, 246, 5, 54, 0, 0, 246, 247, 5, 52, 0, 0, 247, 34, 1,
		0, 0, 0, 248, 249, 5, 98, 0, 0, 249, 250, 5, 111, 0, 0, 250, 251, 5, 111,
		0, 0, 251, 252, 5, 108, 0, 0, 252, 36, 1, 0, 0, 0, 253, 254, 5, 115, 0,
		0, 254, 255, 5, 116, 0, 0, 255, 256, 5, 114, 0, 0, 256, 257, 5, 105, 0,
		0, 257, 258, 5, 110, 0, 0, 258, 259, 5, 103, 0, 0, 259, 38, 1, 0, 0, 0,
		260, 261, 5, 100, 0, 0, 261, 262, 5, 111, 0, 0, 262, 263, 5, 117, 0, 0,
		263, 264, 5, 98, 0, 0, 264, 265, 5, 108, 0, 0, 265, 266, 5, 101, 0, 0,
		266, 40, 1, 0, 0, 0, 267, 268, 5, 102, 0, 0, 268, 269, 5, 108, 0, 0, 269,
		270, 5, 111, 0, 0, 270, 271, 5, 97, 0, 0, 271, 272, 5, 116, 0, 0, 272,
		42, 1, 0, 0, 0, 273, 274, 5, 98, 0, 0, 274, 275, 5, 121, 0, 0, 275, 276,
		5, 116, 0, 0, 276, 277, 5, 101, 0, 0, 277, 278, 5, 115, 0, 0, 278, 44,
		1, 0, 0, 0, 279, 280, 5, 101, 0, 0, 280, 281, 5, 110, 0, 0, 281, 282, 5,
		117, 0, 0, 282, 283, 5, 109, 0, 0, 283, 46, 1, 0, 0, 0, 284, 285, 5, 101,
		0, 0, 285, 286, 5, 110, 0, 0, 286, 287, 5, 116, 0, 0, 287, 288, 5, 105,
		0, 0, 288, 289, 5, 116, 0, 0, 289, 290, 5, 121, 0, 0, 290, 48, 1, 0, 0,
		0, 291, 292, 5, 99, 0, 0, 292, 293, 5, 111, 0, 0, 293, 294, 5, 109, 0,
		0, 294, 295, 5, 112, 0, 0, 295, 296, 5, 111, 0, 0, 296, 297, 5, 110, 0,
		0, 297, 298, 5, 101, 0, 0, 298, 299, 5, 110, 0, 0, 299, 300, 5, 116, 0,
		0, 300, 50, 1, 0, 0, 0, 301, 302, 5, 34, 0, 0, 302, 303, 5, 112, 0, 0,
		303, 304, 5, 114, 0, 0, 304, 305, 5, 111, 0, 0, 305, 306, 5, 116, 0, 0,
		306, 307, 5, 111, 0, 0, 307, 308, 5, 51, 0, 0, 308, 309, 5, 34, 0, 0, 309,
		52, 1, 0, 0, 0, 310, 311, 5, 39, 0, 0, 311, 312, 5, 112, 0, 0, 312, 313,
		5, 114, 0, 0, 313, 314, 5, 111, 0, 0, 314, 315, 5, 116, 0, 0, 315, 316,
		5, 111, 0, 0, 316, 317, 5, 51, 0, 0, 317, 318, 5, 39, 0, 0, 318, 54, 1,
		0, 0, 0, 319, 320, 5, 59, 0, 0, 320, 56, 1, 0, 0, 0, 321, 322, 5, 61, 0,
		0, 322, 58, 1, 0, 0, 0, 323, 324, 5, 40, 0, 0, 324, 60, 1, 0, 0, 0, 325,
		326, 5, 41, 0, 0, 326, 62, 1, 0, 0, 0, 327, 328, 5, 91, 0, 0, 328, 64,
		1, 0, 0, 0, 329, 330, 5, 93, 0, 0, 330, 66, 1, 0, 0, 0, 331, 332, 5, 123,
		0, 0, 332, 68, 1, 0, 0, 0, 333, 334, 5, 125, 0, 0, 334, 70, 1, 0, 0, 0,
		335, 336, 5, 60, 0, 0, 336, 72, 1, 0, 0, 0, 337, 338, 5, 62, 0, 0, 338,
		74, 1, 0, 0, 0, 339, 340, 5, 46, 0, 0, 340, 76, 1, 0, 0, 0, 341, 342, 5,
		44, 0, 0, 342, 78, 1, 0, 0, 0, 343, 344, 5, 58, 0, 0, 344, 80, 1, 0, 0,
		0, 345, 346, 5, 43, 0, 0, 346, 82, 1, 0, 0, 0, 347, 348, 5, 45, 0, 0, 348,
		84, 1, 0, 0, 0, 349, 353, 5, 39, 0, 0, 350, 352, 3, 87, 43, 0, 351, 350,
		1, 0, 0, 0, 352, 355, 1, 0, 0, 0, 353, 354, 1, 0, 0, 0, 353, 351, 1, 0,
		0, 0, 354, 356, 1, 0, 0, 0, 355, 353, 1, 0, 0, 0, 356, 366, 5, 39, 0, 0,
		357, 361, 5, 34, 0, 0, 358, 360, 3, 87, 43, 0, 359, 358, 1, 0, 0, 0, 360,
		363, 1, 0, 0, 0, 361, 362, 1, 0, 0, 0, 361, 359, 1, 0, 0, 0, 362, 364,
		1, 0, 0, 0, 363, 361, 1, 0, 0, 0, 364, 366, 5, 34, 0, 0, 365, 349, 1, 0,
		0, 0, 365, 357, 1, 0, 0, 0, 366, 86, 1, 0, 0, 0, 367, 372, 3, 89, 44, 0,
		368, 372, 3, 91, 45, 0, 369, 372, 3, 93, 46, 0, 370, 372, 8, 0, 0, 0, 371,
		367, 1, 0, 0, 0, 371, 368, 1, 0, 0, 0, 371, 369, 1, 0, 0, 0, 371, 370,
		1, 0, 0, 0, 372, 88, 1, 0, 0, 0, 373, 374, 5, 92, 0, 0, 374, 375, 7, 1,
		0, 0, 375, 376, 3, 119, 59, 0, 376, 377, 3, 119, 59, 0, 377, 90, 1, 0,
		0, 0, 378, 379, 5, 92, 0, 0, 379, 380, 3, 117, 58, 0, 380, 381, 3, 117,
		58, 0, 381, 382, 3, 117, 58, 0, 382, 92, 1, 0, 0, 0, 383, 384, 5, 92, 0,
		0, 384, 385, 7, 2, 0, 0, 385, 94, 1, 0, 0, 0, 386, 387, 5, 116, 0, 0, 387,
		388, 5, 114, 0, 0, 388, 389, 5, 117, 0, 0, 389, 396, 5, 101, 0, 0, 390,
		391, 5, 102, 0, 0, 391, 392, 5, 97, 0, 0, 392, 393, 5, 108, 0, 0, 393,
		394, 5, 115, 0, 0, 394, 396, 5, 101, 0, 0, 395, 386, 1, 0, 0, 0, 395, 390,
		1, 0, 0, 0, 396, 96, 1, 0, 0, 0, 397, 398, 3, 101, 50, 0, 398, 400, 3,
		75, 37, 0, 399, 401, 3, 101, 50, 0, 400, 399, 1, 0, 0, 0, 400, 401, 1,
		0, 0, 0, 401, 403, 1, 0, 0, 0, 402, 404, 3, 99, 49, 0, 403, 402, 1, 0,
		0, 0, 403, 404, 1, 0, 0, 0, 404, 414, 1, 0, 0, 0, 405, 406, 3, 101, 50,
		0, 406, 407, 3, 99, 49, 0, 407, 414, 1, 0, 0, 0, 408, 409, 3, 75, 37, 0,
		409, 411, 3, 101, 50, 0, 410, 412, 3, 99, 49, 0, 411, 410, 1, 0, 0, 0,
		411, 412, 1, 0, 0, 0, 412, 414, 1, 0, 0, 0, 413, 397, 1, 0, 0, 0, 413,
		405, 1, 0, 0, 0, 413, 408, 1, 0, 0, 0, 414, 422, 1, 0, 0, 0, 415, 416,
		5, 105, 0, 0, 416, 417, 5, 110, 0, 0, 417, 422, 5, 102, 0, 0, 418, 419,
		5, 110, 0, 0, 419, 420, 5, 97, 0, 0, 420, 422, 5, 110, 0, 0, 421, 413,
		1, 0, 0, 0, 421, 415, 1, 0, 0, 0, 421, 418, 1, 0, 0, 0, 422, 98, 1, 0,
		0, 0, 423, 426, 7, 3, 0, 0, 424, 427, 3, 81, 40, 0, 425, 427, 3, 83, 41,
		0, 426, 424, 1, 0, 0, 0, 426, 425, 1, 0, 0, 0, 426, 427, 1, 0, 0, 0, 427,
		428, 1, 0, 0, 0, 428, 429, 3, 101, 50, 0, 429, 100, 1, 0, 0, 0, 430, 432,
		3, 115, 57, 0, 431, 430, 1, 0, 0, 0, 432, 433, 1, 0, 0, 0, 433, 431, 1,
		0, 0, 0, 433, 434, 1, 0, 0, 0, 434, 102, 1, 0, 0, 0, 435, 439, 3, 105,
		52, 0, 436, 439, 3, 107, 53, 0, 437, 439, 3, 109, 54, 0, 438, 435, 1, 0,
		0, 0, 438, 436, 1, 0, 0, 0, 438, 437, 1, 0, 0, 0, 439, 104, 1, 0, 0, 0,
		440, 444, 7, 4, 0, 0, 441, 443, 3, 115, 57, 0, 442, 441, 1, 0, 0, 0, 443,
		446, 1, 0, 0, 0, 444, 442, 1, 0, 0, 0, 444, 445, 1, 0, 0, 0, 445, 106,
		1, 0, 0, 0, 446, 444, 1, 0, 0, 0, 447, 451, 5, 48, 0, 0, 448, 450, 3, 117,
		58, 0, 449, 448, 1, 0, 0, 0, 450, 453, 1, 0, 0, 0, 451, 449, 1, 0, 0, 0,
		451, 452, 1, 0, 0, 0, 452, 108, 1, 0, 0, 0, 453, 451, 1, 0, 0, 0, 454,
		455, 5, 48, 0, 0, 455, 457, 7, 1, 0, 0, 456, 458, 3, 119, 59, 0, 457, 456,
		1, 0, 0, 0, 458, 459, 1, 0, 0, 0, 459, 457, 1, 0, 0, 0, 459, 460, 1, 0,
		0, 0, 460, 110, 1, 0, 0, 0, 461, 466, 3, 113, 56, 0, 462, 465, 3, 113,
		56, 0, 463, 465, 3, 115, 57, 0, 464, 462, 1, 0, 0, 0, 464, 463, 1, 0, 0,
		0, 465, 468, 1, 0, 0, 0, 466, 464, 1, 0, 0, 0, 466, 467, 1, 0, 0, 0, 467,
		112, 1, 0, 0, 0, 468, 466, 1, 0, 0, 0, 469, 470, 7, 5, 0, 0, 470, 114,
		1, 0, 0, 0, 471, 472, 7, 6, 0, 0, 472, 116, 1, 0, 0, 0, 473, 474, 7, 7,
		0, 0, 474, 118, 1, 0, 0, 0, 475, 476, 7, 8, 0, 0, 476, 120, 1, 0, 0, 0,
		477, 479, 7, 9, 0, 0, 478, 477, 1, 0, 0, 0, 479, 480, 1, 0, 0, 0, 480,
		478, 1, 0, 0, 0, 480, 481, 1, 0, 0, 0, 481, 482, 1, 0, 0, 0, 482, 483,
		6, 60, 0, 0, 483, 122, 1, 0, 0, 0, 484, 485, 5, 47, 0, 0, 485, 486, 5,
		47, 0, 0, 486, 490, 1, 0, 0, 0, 487, 489, 8, 10, 0, 0, 488, 487, 1, 0,
		0, 0, 489, 492, 1, 0, 0, 0, 490, 488, 1, 0, 0, 0, 490, 491, 1, 0, 0, 0,
		491, 493, 1, 0, 0, 0, 492, 490, 1, 0, 0, 0, 493, 494, 6, 61, 1, 0, 494,
		124, 1, 0, 0, 0, 495, 496, 5, 47, 0, 0, 496, 497, 5, 42, 0, 0, 497, 501,
		1, 0, 0, 0, 498, 500, 9, 0, 0, 0, 499, 498, 1, 0, 0, 0, 500, 503, 1, 0,
		0, 0, 501, 502, 1, 0, 0, 0, 501, 499, 1, 0, 0, 0, 502, 504, 1, 0, 0, 0,
		503, 501, 1, 0, 0, 0, 504, 505, 5, 42, 0, 0, 505, 506, 5, 47, 0, 0, 506,
		507, 1, 0, 0, 0, 507, 508, 6, 62, 1, 0, 508, 126, 1, 0, 0, 0, 22, 0, 353,
		361, 365, 371, 395, 400, 403, 411, 413, 421, 426, 433, 438, 444, 451, 459,
		464, 466, 480, 490, 501, 2, 6, 0, 0, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// kdsLexerInit initializes any static state used to implement kdsLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewkdsLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func KdsLexerInit() {
	staticData := &KdsLexerLexerStaticData
	staticData.once.Do(kdslexerLexerInit)
}

// NewkdsLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewkdsLexer(input antlr.CharStream) *kdsLexer {
	KdsLexerInit()
	l := new(kdsLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &KdsLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "kds.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// kdsLexer tokens.
const (
	kdsLexerIMPORT            = 1
	kdsLexerWEAK              = 2
	kdsLexerPUBLIC            = 3
	kdsLexerPACKAGE           = 4
	kdsLexerOPTION            = 5
	kdsLexerREPEATED          = 6
	kdsLexerMAP               = 7
	kdsLexerINT32             = 8
	kdsLexerINT64             = 9
	kdsLexerUINT32            = 10
	kdsLexerUINT64            = 11
	kdsLexerSINT32            = 12
	kdsLexerSINT64            = 13
	kdsLexerFIXED32           = 14
	kdsLexerFIXED64           = 15
	kdsLexerSFIXED32          = 16
	kdsLexerSFIXED64          = 17
	kdsLexerBOOL              = 18
	kdsLexerSTRING            = 19
	kdsLexerDOUBLE            = 20
	kdsLexerFLOAT             = 21
	kdsLexerBYTES             = 22
	kdsLexerENUM              = 23
	kdsLexerENTITY            = 24
	kdsLexerCOMPONENT         = 25
	kdsLexerPROTO3_LIT_SINGLE = 26
	kdsLexerPROTO3_LIT_DOBULE = 27
	kdsLexerSEMI              = 28
	kdsLexerEQ                = 29
	kdsLexerLP                = 30
	kdsLexerRP                = 31
	kdsLexerLB                = 32
	kdsLexerRB                = 33
	kdsLexerLC                = 34
	kdsLexerRC                = 35
	kdsLexerLT                = 36
	kdsLexerGT                = 37
	kdsLexerDOT               = 38
	kdsLexerCOMMA             = 39
	kdsLexerCOLON             = 40
	kdsLexerPLUS              = 41
	kdsLexerMINUS             = 42
	kdsLexerSTR_LIT           = 43
	kdsLexerBOOL_LIT          = 44
	kdsLexerFLOAT_LIT         = 45
	kdsLexerINT_LIT           = 46
	kdsLexerIDENTIFIER        = 47
	kdsLexerWS                = 48
	kdsLexerLINE_COMMENT      = 49
	kdsLexerCOMMENT           = 50
)
