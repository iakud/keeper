// Code generated from kds.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
  	"sync"
	"unicode"
	"github.com/antlr4-go/antlr/v4"
)
// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter


type kdsLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames []string
	// TODO: EOF string
}

var KdsLexerLexerStaticData struct {
  once                   sync.Once
  serializedATN          []int32
  ChannelNames           []string
  ModeNames              []string
  LiteralNames           []string
  SymbolicNames          []string
  RuleNames              []string
  PredictionContextCache *antlr.PredictionContextCache
  atn                    *antlr.ATN
  decisionToDFA          []*antlr.DFA
}

func kdslexerLexerInit() {
  staticData := &KdsLexerLexerStaticData
  staticData.ChannelNames = []string{
    "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
  }
  staticData.ModeNames = []string{
    "DEFAULT_MODE",
  }
  staticData.LiteralNames = []string{
    "", "'package'", "'repeated'", "'map'", "'int32'", "'int64'", "'uint32'", 
    "'uint64'", "'sint32'", "'sint64'", "'fixed32'", "'fixed64'", "'sfixed32'", 
    "'sfixed64'", "'bool'", "'string'", "'double'", "'float'", "'bytes'", 
    "'enum'", "'entity'", "'component'", "';'", "'='", "'('", "')'", "'['", 
    "']'", "'{'", "'}'", "'<'", "'>'", "'.'", "','", "':'", "'+'", "'-'",
  }
  staticData.SymbolicNames = []string{
    "", "PACKAGE", "REPEATED", "MAP", "INT32", "INT64", "UINT32", "UINT64", 
    "SINT32", "SINT64", "FIXED32", "FIXED64", "SFIXED32", "SFIXED64", "BOOL", 
    "STRING", "DOUBLE", "FLOAT", "BYTES", "ENUM", "ENTITY", "COMPONENT", 
    "SEMI", "EQ", "LP", "RP", "LB", "RB", "LC", "RC", "LT", "GT", "DOT", 
    "COMMA", "COLON", "PLUS", "MINUS", "BOOL_LIT", "INT_LIT", "IDENTIFIER", 
    "WS", "LINE_COMMENT", "COMMENT",
  }
  staticData.RuleNames = []string{
    "PACKAGE", "REPEATED", "MAP", "INT32", "INT64", "UINT32", "UINT64", 
    "SINT32", "SINT64", "FIXED32", "FIXED64", "SFIXED32", "SFIXED64", "BOOL", 
    "STRING", "DOUBLE", "FLOAT", "BYTES", "ENUM", "ENTITY", "COMPONENT", 
    "SEMI", "EQ", "LP", "RP", "LB", "RB", "LC", "RC", "LT", "GT", "DOT", 
    "COMMA", "COLON", "PLUS", "MINUS", "BOOL_LIT", "INT_LIT", "DECIMAL_LIT", 
    "OCTAL_LIT", "HEX_LIT", "IDENTIFIER", "LETTER", "DECIMAL_DIGIT", "OCTAL_DIGIT", 
    "HEX_DIGIT", "WS", "LINE_COMMENT", "COMMENT",
  }
  staticData.PredictionContextCache = antlr.NewPredictionContextCache()
  staticData.serializedATN = []int32{
	4, 0, 42, 362, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 
	4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 
	10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 
	7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 
	20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 
	2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 
	31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 
	7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 
	41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 
	2, 47, 7, 47, 2, 48, 7, 48, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 
	2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 
	4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 
	6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 
	8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 
	9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 
	1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 
	12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 
	1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 
	15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 
	1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 
	18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 
	1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 
	22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 
	1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 
	33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 
	1, 36, 1, 36, 1, 36, 1, 36, 3, 36, 287, 8, 36, 1, 37, 1, 37, 1, 37, 3, 
	37, 292, 8, 37, 1, 38, 1, 38, 5, 38, 296, 8, 38, 10, 38, 12, 38, 299, 9, 
	38, 1, 39, 1, 39, 5, 39, 303, 8, 39, 10, 39, 12, 39, 306, 9, 39, 1, 40, 
	1, 40, 1, 40, 4, 40, 311, 8, 40, 11, 40, 12, 40, 312, 1, 41, 1, 41, 1, 
	41, 5, 41, 318, 8, 41, 10, 41, 12, 41, 321, 9, 41, 1, 42, 1, 42, 1, 43, 
	1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 4, 46, 332, 8, 46, 11, 46, 12, 
	46, 333, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 5, 47, 342, 8, 47, 10, 
	47, 12, 47, 345, 9, 47, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 48, 5, 48, 
	353, 8, 48, 10, 48, 12, 48, 356, 9, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 
	48, 1, 354, 0, 49, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 
	9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 
	18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 
	27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 
	36, 73, 37, 75, 38, 77, 0, 79, 0, 81, 0, 83, 39, 85, 0, 87, 0, 89, 0, 91, 
	0, 93, 40, 95, 41, 97, 42, 1, 0, 8, 1, 0, 49, 57, 2, 0, 88, 88, 120, 120, 
	3, 0, 65, 90, 95, 95, 97, 122, 1, 0, 48, 57, 1, 0, 48, 55, 3, 0, 48, 57, 
	65, 70, 97, 102, 3, 0, 9, 10, 12, 13, 32, 32, 2, 0, 10, 10, 13, 13, 365, 
	0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 
	0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 
	0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 
	0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 
	0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 
	1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 
	47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 
	0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 
	0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 
	0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 83, 1, 
	0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 1, 99, 
	1, 0, 0, 0, 3, 107, 1, 0, 0, 0, 5, 116, 1, 0, 0, 0, 7, 120, 1, 0, 0, 0, 
	9, 126, 1, 0, 0, 0, 11, 132, 1, 0, 0, 0, 13, 139, 1, 0, 0, 0, 15, 146, 
	1, 0, 0, 0, 17, 153, 1, 0, 0, 0, 19, 160, 1, 0, 0, 0, 21, 168, 1, 0, 0, 
	0, 23, 176, 1, 0, 0, 0, 25, 185, 1, 0, 0, 0, 27, 194, 1, 0, 0, 0, 29, 199, 
	1, 0, 0, 0, 31, 206, 1, 0, 0, 0, 33, 213, 1, 0, 0, 0, 35, 219, 1, 0, 0, 
	0, 37, 225, 1, 0, 0, 0, 39, 230, 1, 0, 0, 0, 41, 237, 1, 0, 0, 0, 43, 247, 
	1, 0, 0, 0, 45, 249, 1, 0, 0, 0, 47, 251, 1, 0, 0, 0, 49, 253, 1, 0, 0, 
	0, 51, 255, 1, 0, 0, 0, 53, 257, 1, 0, 0, 0, 55, 259, 1, 0, 0, 0, 57, 261, 
	1, 0, 0, 0, 59, 263, 1, 0, 0, 0, 61, 265, 1, 0, 0, 0, 63, 267, 1, 0, 0, 
	0, 65, 269, 1, 0, 0, 0, 67, 271, 1, 0, 0, 0, 69, 273, 1, 0, 0, 0, 71, 275, 
	1, 0, 0, 0, 73, 286, 1, 0, 0, 0, 75, 291, 1, 0, 0, 0, 77, 293, 1, 0, 0, 
	0, 79, 300, 1, 0, 0, 0, 81, 307, 1, 0, 0, 0, 83, 314, 1, 0, 0, 0, 85, 322, 
	1, 0, 0, 0, 87, 324, 1, 0, 0, 0, 89, 326, 1, 0, 0, 0, 91, 328, 1, 0, 0, 
	0, 93, 331, 1, 0, 0, 0, 95, 337, 1, 0, 0, 0, 97, 348, 1, 0, 0, 0, 99, 100, 
	5, 112, 0, 0, 100, 101, 5, 97, 0, 0, 101, 102, 5, 99, 0, 0, 102, 103, 5, 
	107, 0, 0, 103, 104, 5, 97, 0, 0, 104, 105, 5, 103, 0, 0, 105, 106, 5, 
	101, 0, 0, 106, 2, 1, 0, 0, 0, 107, 108, 5, 114, 0, 0, 108, 109, 5, 101, 
	0, 0, 109, 110, 5, 112, 0, 0, 110, 111, 5, 101, 0, 0, 111, 112, 5, 97, 
	0, 0, 112, 113, 5, 116, 0, 0, 113, 114, 5, 101, 0, 0, 114, 115, 5, 100, 
	0, 0, 115, 4, 1, 0, 0, 0, 116, 117, 5, 109, 0, 0, 117, 118, 5, 97, 0, 0, 
	118, 119, 5, 112, 0, 0, 119, 6, 1, 0, 0, 0, 120, 121, 5, 105, 0, 0, 121, 
	122, 5, 110, 0, 0, 122, 123, 5, 116, 0, 0, 123, 124, 5, 51, 0, 0, 124, 
	125, 5, 50, 0, 0, 125, 8, 1, 0, 0, 0, 126, 127, 5, 105, 0, 0, 127, 128, 
	5, 110, 0, 0, 128, 129, 5, 116, 0, 0, 129, 130, 5, 54, 0, 0, 130, 131, 
	5, 52, 0, 0, 131, 10, 1, 0, 0, 0, 132, 133, 5, 117, 0, 0, 133, 134, 5, 
	105, 0, 0, 134, 135, 5, 110, 0, 0, 135, 136, 5, 116, 0, 0, 136, 137, 5, 
	51, 0, 0, 137, 138, 5, 50, 0, 0, 138, 12, 1, 0, 0, 0, 139, 140, 5, 117, 
	0, 0, 140, 141, 5, 105, 0, 0, 141, 142, 5, 110, 0, 0, 142, 143, 5, 116, 
	0, 0, 143, 144, 5, 54, 0, 0, 144, 145, 5, 52, 0, 0, 145, 14, 1, 0, 0, 0, 
	146, 147, 5, 115, 0, 0, 147, 148, 5, 105, 0, 0, 148, 149, 5, 110, 0, 0, 
	149, 150, 5, 116, 0, 0, 150, 151, 5, 51, 0, 0, 151, 152, 5, 50, 0, 0, 152, 
	16, 1, 0, 0, 0, 153, 154, 5, 115, 0, 0, 154, 155, 5, 105, 0, 0, 155, 156, 
	5, 110, 0, 0, 156, 157, 5, 116, 0, 0, 157, 158, 5, 54, 0, 0, 158, 159, 
	5, 52, 0, 0, 159, 18, 1, 0, 0, 0, 160, 161, 5, 102, 0, 0, 161, 162, 5, 
	105, 0, 0, 162, 163, 5, 120, 0, 0, 163, 164, 5, 101, 0, 0, 164, 165, 5, 
	100, 0, 0, 165, 166, 5, 51, 0, 0, 166, 167, 5, 50, 0, 0, 167, 20, 1, 0, 
	0, 0, 168, 169, 5, 102, 0, 0, 169, 170, 5, 105, 0, 0, 170, 171, 5, 120, 
	0, 0, 171, 172, 5, 101, 0, 0, 172, 173, 5, 100, 0, 0, 173, 174, 5, 54, 
	0, 0, 174, 175, 5, 52, 0, 0, 175, 22, 1, 0, 0, 0, 176, 177, 5, 115, 0, 
	0, 177, 178, 5, 102, 0, 0, 178, 179, 5, 105, 0, 0, 179, 180, 5, 120, 0, 
	0, 180, 181, 5, 101, 0, 0, 181, 182, 5, 100, 0, 0, 182, 183, 5, 51, 0, 
	0, 183, 184, 5, 50, 0, 0, 184, 24, 1, 0, 0, 0, 185, 186, 5, 115, 0, 0, 
	186, 187, 5, 102, 0, 0, 187, 188, 5, 105, 0, 0, 188, 189, 5, 120, 0, 0, 
	189, 190, 5, 101, 0, 0, 190, 191, 5, 100, 0, 0, 191, 192, 5, 54, 0, 0, 
	192, 193, 5, 52, 0, 0, 193, 26, 1, 0, 0, 0, 194, 195, 5, 98, 0, 0, 195, 
	196, 5, 111, 0, 0, 196, 197, 5, 111, 0, 0, 197, 198, 5, 108, 0, 0, 198, 
	28, 1, 0, 0, 0, 199, 200, 5, 115, 0, 0, 200, 201, 5, 116, 0, 0, 201, 202, 
	5, 114, 0, 0, 202, 203, 5, 105, 0, 0, 203, 204, 5, 110, 0, 0, 204, 205, 
	5, 103, 0, 0, 205, 30, 1, 0, 0, 0, 206, 207, 5, 100, 0, 0, 207, 208, 5, 
	111, 0, 0, 208, 209, 5, 117, 0, 0, 209, 210, 5, 98, 0, 0, 210, 211, 5, 
	108, 0, 0, 211, 212, 5, 101, 0, 0, 212, 32, 1, 0, 0, 0, 213, 214, 5, 102, 
	0, 0, 214, 215, 5, 108, 0, 0, 215, 216, 5, 111, 0, 0, 216, 217, 5, 97, 
	0, 0, 217, 218, 5, 116, 0, 0, 218, 34, 1, 0, 0, 0, 219, 220, 5, 98, 0, 
	0, 220, 221, 5, 121, 0, 0, 221, 222, 5, 116, 0, 0, 222, 223, 5, 101, 0, 
	0, 223, 224, 5, 115, 0, 0, 224, 36, 1, 0, 0, 0, 225, 226, 5, 101, 0, 0, 
	226, 227, 5, 110, 0, 0, 227, 228, 5, 117, 0, 0, 228, 229, 5, 109, 0, 0, 
	229, 38, 1, 0, 0, 0, 230, 231, 5, 101, 0, 0, 231, 232, 5, 110, 0, 0, 232, 
	233, 5, 116, 0, 0, 233, 234, 5, 105, 0, 0, 234, 235, 5, 116, 0, 0, 235, 
	236, 5, 121, 0, 0, 236, 40, 1, 0, 0, 0, 237, 238, 5, 99, 0, 0, 238, 239, 
	5, 111, 0, 0, 239, 240, 5, 109, 0, 0, 240, 241, 5, 112, 0, 0, 241, 242, 
	5, 111, 0, 0, 242, 243, 5, 110, 0, 0, 243, 244, 5, 101, 0, 0, 244, 245, 
	5, 110, 0, 0, 245, 246, 5, 116, 0, 0, 246, 42, 1, 0, 0, 0, 247, 248, 5, 
	59, 0, 0, 248, 44, 1, 0, 0, 0, 249, 250, 5, 61, 0, 0, 250, 46, 1, 0, 0, 
	0, 251, 252, 5, 40, 0, 0, 252, 48, 1, 0, 0, 0, 253, 254, 5, 41, 0, 0, 254, 
	50, 1, 0, 0, 0, 255, 256, 5, 91, 0, 0, 256, 52, 1, 0, 0, 0, 257, 258, 5, 
	93, 0, 0, 258, 54, 1, 0, 0, 0, 259, 260, 5, 123, 0, 0, 260, 56, 1, 0, 0, 
	0, 261, 262, 5, 125, 0, 0, 262, 58, 1, 0, 0, 0, 263, 264, 5, 60, 0, 0, 
	264, 60, 1, 0, 0, 0, 265, 266, 5, 62, 0, 0, 266, 62, 1, 0, 0, 0, 267, 268, 
	5, 46, 0, 0, 268, 64, 1, 0, 0, 0, 269, 270, 5, 44, 0, 0, 270, 66, 1, 0, 
	0, 0, 271, 272, 5, 58, 0, 0, 272, 68, 1, 0, 0, 0, 273, 274, 5, 43, 0, 0, 
	274, 70, 1, 0, 0, 0, 275, 276, 5, 45, 0, 0, 276, 72, 1, 0, 0, 0, 277, 278, 
	5, 116, 0, 0, 278, 279, 5, 114, 0, 0, 279, 280, 5, 117, 0, 0, 280, 287, 
	5, 101, 0, 0, 281, 282, 5, 102, 0, 0, 282, 283, 5, 97, 0, 0, 283, 284, 
	5, 108, 0, 0, 284, 285, 5, 115, 0, 0, 285, 287, 5, 101, 0, 0, 286, 277, 
	1, 0, 0, 0, 286, 281, 1, 0, 0, 0, 287, 74, 1, 0, 0, 0, 288, 292, 3, 77, 
	38, 0, 289, 292, 3, 79, 39, 0, 290, 292, 3, 81, 40, 0, 291, 288, 1, 0, 
	0, 0, 291, 289, 1, 0, 0, 0, 291, 290, 1, 0, 0, 0, 292, 76, 1, 0, 0, 0, 
	293, 297, 7, 0, 0, 0, 294, 296, 3, 87, 43, 0, 295, 294, 1, 0, 0, 0, 296, 
	299, 1, 0, 0, 0, 297, 295, 1, 0, 0, 0, 297, 298, 1, 0, 0, 0, 298, 78, 1, 
	0, 0, 0, 299, 297, 1, 0, 0, 0, 300, 304, 5, 48, 0, 0, 301, 303, 3, 89, 
	44, 0, 302, 301, 1, 0, 0, 0, 303, 306, 1, 0, 0, 0, 304, 302, 1, 0, 0, 0, 
	304, 305, 1, 0, 0, 0, 305, 80, 1, 0, 0, 0, 306, 304, 1, 0, 0, 0, 307, 308, 
	5, 48, 0, 0, 308, 310, 7, 1, 0, 0, 309, 311, 3, 91, 45, 0, 310, 309, 1, 
	0, 0, 0, 311, 312, 1, 0, 0, 0, 312, 310, 1, 0, 0, 0, 312, 313, 1, 0, 0, 
	0, 313, 82, 1, 0, 0, 0, 314, 319, 3, 85, 42, 0, 315, 318, 3, 85, 42, 0, 
	316, 318, 3, 87, 43, 0, 317, 315, 1, 0, 0, 0, 317, 316, 1, 0, 0, 0, 318, 
	321, 1, 0, 0, 0, 319, 317, 1, 0, 0, 0, 319, 320, 1, 0, 0, 0, 320, 84, 1, 
	0, 0, 0, 321, 319, 1, 0, 0, 0, 322, 323, 7, 2, 0, 0, 323, 86, 1, 0, 0, 
	0, 324, 325, 7, 3, 0, 0, 325, 88, 1, 0, 0, 0, 326, 327, 7, 4, 0, 0, 327, 
	90, 1, 0, 0, 0, 328, 329, 7, 5, 0, 0, 329, 92, 1, 0, 0, 0, 330, 332, 7, 
	6, 0, 0, 331, 330, 1, 0, 0, 0, 332, 333, 1, 0, 0, 0, 333, 331, 1, 0, 0, 
	0, 333, 334, 1, 0, 0, 0, 334, 335, 1, 0, 0, 0, 335, 336, 6, 46, 0, 0, 336, 
	94, 1, 0, 0, 0, 337, 338, 5, 47, 0, 0, 338, 339, 5, 47, 0, 0, 339, 343, 
	1, 0, 0, 0, 340, 342, 8, 7, 0, 0, 341, 340, 1, 0, 0, 0, 342, 345, 1, 0, 
	0, 0, 343, 341, 1, 0, 0, 0, 343, 344, 1, 0, 0, 0, 344, 346, 1, 0, 0, 0, 
	345, 343, 1, 0, 0, 0, 346, 347, 6, 47, 1, 0, 347, 96, 1, 0, 0, 0, 348, 
	349, 5, 47, 0, 0, 349, 350, 5, 42, 0, 0, 350, 354, 1, 0, 0, 0, 351, 353, 
	9, 0, 0, 0, 352, 351, 1, 0, 0, 0, 353, 356, 1, 0, 0, 0, 354, 355, 1, 0, 
	0, 0, 354, 352, 1, 0, 0, 0, 355, 357, 1, 0, 0, 0, 356, 354, 1, 0, 0, 0, 
	357, 358, 5, 42, 0, 0, 358, 359, 5, 47, 0, 0, 359, 360, 1, 0, 0, 0, 360, 
	361, 6, 48, 1, 0, 361, 98, 1, 0, 0, 0, 11, 0, 286, 291, 297, 304, 312, 
	317, 319, 333, 343, 354, 2, 6, 0, 0, 0, 1, 0,
}
  deserializer := antlr.NewATNDeserializer(nil)
  staticData.atn = deserializer.Deserialize(staticData.serializedATN)
  atn := staticData.atn
  staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
  decisionToDFA := staticData.decisionToDFA
  for index, state := range atn.DecisionToState {
    decisionToDFA[index] = antlr.NewDFA(state, index)
  }
}

// kdsLexerInit initializes any static state used to implement kdsLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewkdsLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func KdsLexerInit() {
  staticData := &KdsLexerLexerStaticData
  staticData.once.Do(kdslexerLexerInit)
}

// NewkdsLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewkdsLexer(input antlr.CharStream) *kdsLexer {
  KdsLexerInit()
	l := new(kdsLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
  staticData := &KdsLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "kds.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// kdsLexer tokens.
const (
	kdsLexerPACKAGE = 1
	kdsLexerREPEATED = 2
	kdsLexerMAP = 3
	kdsLexerINT32 = 4
	kdsLexerINT64 = 5
	kdsLexerUINT32 = 6
	kdsLexerUINT64 = 7
	kdsLexerSINT32 = 8
	kdsLexerSINT64 = 9
	kdsLexerFIXED32 = 10
	kdsLexerFIXED64 = 11
	kdsLexerSFIXED32 = 12
	kdsLexerSFIXED64 = 13
	kdsLexerBOOL = 14
	kdsLexerSTRING = 15
	kdsLexerDOUBLE = 16
	kdsLexerFLOAT = 17
	kdsLexerBYTES = 18
	kdsLexerENUM = 19
	kdsLexerENTITY = 20
	kdsLexerCOMPONENT = 21
	kdsLexerSEMI = 22
	kdsLexerEQ = 23
	kdsLexerLP = 24
	kdsLexerRP = 25
	kdsLexerLB = 26
	kdsLexerRB = 27
	kdsLexerLC = 28
	kdsLexerRC = 29
	kdsLexerLT = 30
	kdsLexerGT = 31
	kdsLexerDOT = 32
	kdsLexerCOMMA = 33
	kdsLexerCOLON = 34
	kdsLexerPLUS = 35
	kdsLexerMINUS = 36
	kdsLexerBOOL_LIT = 37
	kdsLexerINT_LIT = 38
	kdsLexerIDENTIFIER = 39
	kdsLexerWS = 40
	kdsLexerLINE_COMMENT = 41
	kdsLexerCOMMENT = 42
)

