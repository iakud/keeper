// Code generated by kds. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: test.proto

package examplepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerType int32

const (
	PlayerType_KING   PlayerType = 0
	PlayerType_NORMAL PlayerType = 1
)

// Enum value maps for PlayerType.
var (
	PlayerType_name = map[int32]string{
		0: "KING",
		1: "NORMAL",
	}
	PlayerType_value = map[string]int32{
		"KING":   0,
		"NORMAL": 1,
	}
)

func (x PlayerType) Enum() *PlayerType {
	p := new(PlayerType)
	*p = x
	return p
}

func (x PlayerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerType) Descriptor() protoreflect.EnumDescriptor {
	return file_test_proto_enumTypes[0].Descriptor()
}

func (PlayerType) Type() protoreflect.EnumType {
	return &file_test_proto_enumTypes[0]
}

func (x PlayerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerType.Descriptor instead.
func (PlayerType) EnumDescriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

type Key4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Key4) Reset() {
	*x = Key4{}
	mi := &file_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key4) ProtoMessage() {}

func (x *Key4) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key4.ProtoReflect.Descriptor instead.
func (*Key4) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

type PlayerTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Info      *BasicInfo             `protobuf:"bytes,2,opt,name=Info,proto3" json:"Info,omitempty"`
	Any       *anypb.Any             `protobuf:"bytes,3,opt,name=Any,proto3" json:"Any,omitempty"`
	Level     *wrapperspb.Int32Value `protobuf:"bytes,4,opt,name=Level,proto3" json:"Level,omitempty"`
	Infos     []*BasicInfo           `protobuf:"bytes,5,rep,name=Infos,proto3" json:"Infos,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,10,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// Types that are assignable to Field1:
	//
	//	*PlayerTest_Key1
	//	*PlayerTest_Key2
	//	*PlayerTest_Key3
	//	*PlayerTest_Key4
	Field1 isPlayerTest_Field1 `protobuf_oneof:"Field1"`
	Buffs  map[int32]string    `protobuf:"bytes,20,rep,name=Buffs,proto3" json:"Buffs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PlayerTest) Reset() {
	*x = PlayerTest{}
	mi := &file_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerTest) ProtoMessage() {}

func (x *PlayerTest) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerTest.ProtoReflect.Descriptor instead.
func (*PlayerTest) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerTest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayerTest) GetInfo() *BasicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PlayerTest) GetAny() *anypb.Any {
	if x != nil {
		return x.Any
	}
	return nil
}

func (x *PlayerTest) GetLevel() *wrapperspb.Int32Value {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *PlayerTest) GetInfos() []*BasicInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *PlayerTest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (m *PlayerTest) GetField1() isPlayerTest_Field1 {
	if m != nil {
		return m.Field1
	}
	return nil
}

func (x *PlayerTest) GetKey1() int64 {
	if x, ok := x.GetField1().(*PlayerTest_Key1); ok {
		return x.Key1
	}
	return 0
}

func (x *PlayerTest) GetKey2() string {
	if x, ok := x.GetField1().(*PlayerTest_Key2); ok {
		return x.Key2
	}
	return ""
}

func (x *PlayerTest) GetKey3() bool {
	if x, ok := x.GetField1().(*PlayerTest_Key3); ok {
		return x.Key3
	}
	return false
}

func (x *PlayerTest) GetKey4() *Key4 {
	if x, ok := x.GetField1().(*PlayerTest_Key4); ok {
		return x.Key4
	}
	return nil
}

func (x *PlayerTest) GetBuffs() map[int32]string {
	if x != nil {
		return x.Buffs
	}
	return nil
}

type isPlayerTest_Field1 interface {
	isPlayerTest_Field1()
}

type PlayerTest_Key1 struct {
	Key1 int64 `protobuf:"varint,11,opt,name=Key1,proto3,oneof"`
}

type PlayerTest_Key2 struct {
	Key2 string `protobuf:"bytes,12,opt,name=Key2,proto3,oneof"`
}

type PlayerTest_Key3 struct {
	Key3 bool `protobuf:"varint,13,opt,name=Key3,proto3,oneof"`
}

type PlayerTest_Key4 struct {
	Key4 *Key4 `protobuf:"bytes,14,opt,name=Key4,proto3,oneof"`
}

func (*PlayerTest_Key1) isPlayerTest_Field1() {}

func (*PlayerTest_Key2) isPlayerTest_Field1() {}

func (*PlayerTest_Key3) isPlayerTest_Field1() {}

func (*PlayerTest_Key4) isPlayerTest_Field1() {}

var File_test_proto protoreflect.FileDescriptor

var file_test_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x6b, 0x64, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x06, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x34, 0x22, 0xf1, 0x03, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x6b, 0x64, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x03, 0x41, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x41, 0x6e, 0x79, 0x12, 0x31, 0x0a,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x2b, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x6b, 0x64, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x31,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x04, 0x4b, 0x65, 0x79, 0x31, 0x12, 0x14,
	0x0a, 0x04, 0x4b, 0x65, 0x79, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x4b, 0x65, 0x79, 0x32, 0x12, 0x14, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x33, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x4b, 0x65, 0x79, 0x33, 0x12, 0x26, 0x0a, 0x04, 0x4b, 0x65,
	0x79, 0x34, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x6b, 0x64, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x34, 0x48, 0x00, 0x52, 0x04, 0x4b, 0x65,
	0x79, 0x34, 0x12, 0x37, 0x0a, 0x05, 0x42, 0x75, 0x66, 0x66, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x6b, 0x64, 0x73, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x42, 0x75, 0x66, 0x66, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x42,
	0x75, 0x66, 0x66, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x2a,
	0x22, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41,
	0x4c, 0x10, 0x01, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x69, 0x61, 0x6b, 0x75, 0x64, 0x2f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2f, 0x6b,
	0x64, 0x73, 0x2f, 0x6b, 0x64, 0x73, 0x63, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData = file_test_proto_rawDesc
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_proto_rawDescData)
	})
	return file_test_proto_rawDescData
}

var file_test_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_test_proto_goTypes = []any{
	(PlayerType)(0),               // 0: examplekds.PlayerType
	(*Key4)(nil),                  // 1: examplekds.Key4
	(*PlayerTest)(nil),            // 2: examplekds.PlayerTest
	nil,                           // 3: examplekds.PlayerTest.BuffsEntry
	(*BasicInfo)(nil),             // 4: examplekds.BasicInfo
	(*anypb.Any)(nil),             // 5: google.protobuf.Any
	(*wrapperspb.Int32Value)(nil), // 6: google.protobuf.Int32Value
	(*fieldmaskpb.FieldMask)(nil), // 7: google.protobuf.FieldMask
}
var file_test_proto_depIdxs = []int32{
	4, // 0: examplekds.PlayerTest.Info:type_name -> examplekds.BasicInfo
	5, // 1: examplekds.PlayerTest.Any:type_name -> google.protobuf.Any
	6, // 2: examplekds.PlayerTest.Level:type_name -> google.protobuf.Int32Value
	4, // 3: examplekds.PlayerTest.Infos:type_name -> examplekds.BasicInfo
	7, // 4: examplekds.PlayerTest.field_mask:type_name -> google.protobuf.FieldMask
	1, // 5: examplekds.PlayerTest.Key4:type_name -> examplekds.Key4
	3, // 6: examplekds.PlayerTest.Buffs:type_name -> examplekds.PlayerTest.BuffsEntry
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	file_player_proto_init()
	file_test_proto_msgTypes[1].OneofWrappers = []any{
		(*PlayerTest_Key1)(nil),
		(*PlayerTest_Key2)(nil),
		(*PlayerTest_Key3)(nil),
		(*PlayerTest_Key4)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		EnumInfos:         file_test_proto_enumTypes,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_rawDesc = nil
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}
